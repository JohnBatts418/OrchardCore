@model TemplateViewModel
@{
    var returnUrl = ViewData["returnUrl"]?.ToString();
    var culture = CultureInfo.CurrentUICulture;
}

@await DisplayAsync(await New.ShortcodeModal())

@if (Model.AdminTemplates)
{
    <zone Name="Title"><h1>@RenderTitleSegments(T["Edit Admin Template"])</h1></zone>
}
else
{
    <zone Name="Title"><h1>@RenderTitleSegments(T["Edit Template"])</h1></zone>
}

<div asp-validation-summary="ModelOnly"></div>
<form asp-action="Edit" asp-route-returnUrl="@ViewData["returnUrl"]" method="post" class="no-multisubmit">
    <div class="card mb-3 position-sticky action-bar">
        <div class="card-body bg-primary p-3 text-right">
            <div class="btn-group">
                <button type="submit" name="submit" class="btn btn-sm btn-primary save">@T["Save"]</button>
                <button type="button" class="btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split" data-reference="parent" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="sr-only">@T["Toggle Dropdown"]</span>
                </button>
                <div class="dropdown-menu">
                    <button class="dropdown-item save-continue" name="submit" type="submit" value="SaveAndContinue">@T["and continue"]</button>
                </div>
            </div>

            @if (Url.IsLocalUrl(returnUrl))
            {
                <a class="btn btn-sm btn-secondary cancel" role="button" href="@returnUrl">@T["Cancel"]</a>
            }

            @if (!Model.AdminTemplates)
            {
                <a class="btn btn-sm btn-info" role="button" href="@Url.Action("Index", "Preview", new { area = "OrchardCore.Templates" })" target="_blank">@T["Preview"]</a>
            }
        </div>
    </div>

    <input type="hidden" value="@Model.Name" name="sourceName" />
    <input type="hidden" asp-for="AdminTemplates" />

    <div class="form-group" asp-validation-class-for="Name">
        <label asp-for="Name">@T["Name"]</label>
        <input asp-for="Name" class="form-control" autofocus />
        <span asp-validation-for="Name"></span>
        <span class="hint">@T["The name of the template."]</span>
    </div>

    <div class="form-group" asp-validation-class-for="Description">
        <label asp-for="Description">@T["Description"]</label>
        <input asp-for="Description" class="form-control" autofocus />
        <span class="hint">@T["The description of the template."]</span>
    </div>

    <div class="form-group" asp-validation-class-for="Content">
        <label asp-for="Content">@T["Content"]</label>
        <div class="form-control" data-monaco-oc="true" data-textarea-id="@Html.IdFor(x => x.Content)" data-language="liquid" data-shortcodes="true" data-template-preview="true" data-name-id="@Html.IdFor(x => x.Name)" dir="@culture.GetLanguageDirection()" ></div>
        <textarea asp-for="Content" class="content-preview-text" hidden>@Html.Raw(Model.Content)</textarea>
        <span asp-validation-for="Content"></span>
        <span class="hint">@T["The Liquid template."]</span>
    </div>
</form>

<script asp-name="monaco-oc-editor" depends-on="admin, liquid-intellisense" at="Foot"></script>

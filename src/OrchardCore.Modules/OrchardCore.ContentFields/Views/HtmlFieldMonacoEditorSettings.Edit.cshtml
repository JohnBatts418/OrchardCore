@model OrchardCore.ContentFields.ViewModels.MonacoSettingsViewModel
@inject OrchardCore.Environment.Shell.ShellSettings shellSettings;
@{ 
    var urlPrefix = String.IsNullOrWhiteSpace(shellSettings.RequestUrlPrefix) ? string.Empty : String.Concat(shellSettings.RequestUrlPrefix, '/');
    var IStandaloneEditorConstructionOptionsSchemaPath = $"/{urlPrefix}OrchardCore.Resources/Scripts/monaco/IStandaloneEditorConstructionOptions.json";
    var diagnosticsOptions = System.Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(string.Format(@"{{
            ""validate"": true,
            ""enableSchemaRequest"": true,
            ""allowComments"": true,
            ""schemas"": [{{
                ""uri"": ""{0}"",
                ""fileMatch"": [""*""]
            }}]
        }}", IStandaloneEditorConstructionOptionsSchemaPath)));

    var settings = System.Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(@"{
            ""language"": ""json"",
            ""lineNumbers"": false,
            ""minimap"": { ""enabled"": false }
        }"));
}

<div id="@Html.IdFor(m => m)" class="field-editor field-editor-monaco">
    <div class="form-group">
        <label asp-for="Options">@T["Enter the editor options, language is always set to `html` when saved."]</label>
        <div class="form-control" data-monaco-oc="true" data-linked-id="@Html.IdFor(x => x.Options)" data-settings="@settings" data-diagnostics-options="@diagnosticsOptions"></div>
        <span class="hint"><a href="https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.istandaloneeditorconstructionoptions.html" target="_blank">@T["Documentation for options"]</a></span>
        <textarea asp-for="Options" hidden>@Html.Raw(Model.Options)</textarea>
    </div>
</div>
<script asp-name="monaco-oc-editor" depends-on="admin" at="Foot"></script>
